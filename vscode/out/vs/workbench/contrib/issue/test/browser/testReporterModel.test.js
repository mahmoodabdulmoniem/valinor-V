/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import assert from 'assert';
import { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';
import { IssueReporterModel } from '../../browser/issueReporterModel.js';
import { normalizeGitHubUrl } from '../../common/issueReporterUtil.js';
suite('IssueReporter', () => {
    ensureNoDisposablesAreLeakedInTestSuite();
    test('sets defaults to include all data', () => {
        const issueReporterModel = new IssueReporterModel();
        assert.deepStrictEqual(issueReporterModel.getData(), {
            allExtensions: [],
            includeSystemInfo: true,
            includeExtensionData: true,
            includeWorkspaceInfo: true,
            includeProcessInfo: true,
            includeExtensions: true,
            includeExperiments: true,
            issueType: 0
        });
    });
    test('serializes model skeleton when no data is provided', () => {
        const issueReporterModel = new IssueReporterModel({});
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('serializes GPU information when data is provided', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '',
                screenReader: 'no',
                remoteData: [],
                gpuStatus: {
                    '2d_canvas': 'enabled',
                    'checker_imaging': 'disabled_off'
                }
            }
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off|
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv||
|Screen Reader|no|
|VM|0%|
</details>Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('serializes experiment info when data is provided', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '',
                screenReader: 'no',
                remoteData: [],
                gpuStatus: {
                    '2d_canvas': 'enabled',
                    'checker_imaging': 'disabled_off'
                }
            },
            experimentInfo: 'vsliv695:30137379\nvsins829:30139715'
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off|
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv||
|Screen Reader|no|
|VM|0%|
</details>Extensions: none<details>
<summary>A/B Experiments</summary>

\`\`\`
vsliv695:30137379
vsins829:30139715
\`\`\`

</details>

<!-- generated by issue reporter -->`);
    });
    test('serializes Linux environment information when data is provided', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '',
                screenReader: 'no',
                remoteData: [],
                gpuStatus: {},
                linuxEnv: {
                    desktopSession: 'ubuntu',
                    xdgCurrentDesktop: 'ubuntu',
                    xdgSessionDesktop: 'ubuntu:GNOME',
                    xdgSessionType: 'x11'
                }
            }
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status||
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv||
|Screen Reader|no|
|VM|0%|
|DESKTOP_SESSION|ubuntu|
|XDG_CURRENT_DESKTOP|ubuntu|
|XDG_SESSION_DESKTOP|ubuntu:GNOME|
|XDG_SESSION_TYPE|x11|
</details>Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('serializes remote information when data is provided', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '',
                screenReader: 'no',
                gpuStatus: {
                    '2d_canvas': 'enabled',
                    'checker_imaging': 'disabled_off'
                },
                remoteData: [
                    {
                        hostName: 'SSH: Pineapple',
                        machineInfo: {
                            os: 'Linux x64 4.18.0',
                            cpus: 'Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz (2 x 2294)',
                            memory: '8GB',
                            vmHint: '100%'
                        }
                    }
                ]
            }
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:
Remote OS version: Linux x64 4.18.0

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off|
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv||
|Screen Reader|no|
|VM|0%|

|Item|Value|
|---|---|
|Remote|SSH: Pineapple|
|OS|Linux x64 4.18.0|
|CPUs|Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz (2 x 2294)|
|Memory (System)|8GB|
|VM|100%|
</details>Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('escapes backslashes in processArgs', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '\\\\HOST\\path',
                screenReader: 'no',
                remoteData: [],
                gpuStatus: {}
            }
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status||
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv|\\\\\\\\HOST\\\\path|
|Screen Reader|no|
|VM|0%|
</details>Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('should supply mode if applicable', () => {
        const issueReporterModel = new IssueReporterModel({
            isUnsupported: true,
            restrictedMode: true
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes: Restricted, Unsupported

Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('should normalize GitHub urls', () => {
        [
            'https://github.com/repo',
            'https://github.com/repo/',
            'https://github.com/repo.git',
            'https://github.com/repo/issues',
            'https://github.com/repo/issues/',
            'https://github.com/repo/issues/new',
            'https://github.com/repo/issues/new/'
        ].forEach(url => {
            assert.strictEqual('https://github.com/repo', normalizeGitHubUrl(url));
        });
    });
    test('should have support for filing on extensions for bugs, performance issues, and feature requests', () => {
        [
            0 /* IssueType.Bug */,
            2 /* IssueType.FeatureRequest */,
            1 /* IssueType.PerformanceIssue */
        ].forEach(type => {
            const issueReporterModel = new IssueReporterModel({
                issueType: type,
                fileOnExtension: true
            });
            assert.strictEqual(issueReporterModel.fileOnExtension(), true);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdFJlcG9ydGVyTW9kZWwudGVzdC5qcyIsInNvdXJjZVJvb3QiOiJmaWxlOi8vL1VzZXJzL21haG1vb2RhYmR1bG1vbmllbS9EZXNrdG9wL3ZhbGlub3ItVi92c2NvZGUvc3JjLyIsInNvdXJjZXMiOlsidnMvd29ya2JlbmNoL2NvbnRyaWIvaXNzdWUvdGVzdC9icm93c2VyL3Rlc3RSZXBvcnRlck1vZGVsLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztnR0FHZ0c7QUFFaEcsT0FBTyxNQUFNLE1BQU0sUUFBUSxDQUFDO0FBQzVCLE9BQU8sRUFBRSx1Q0FBdUMsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ25HLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRXpFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBRXZFLEtBQUssQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFO0lBQzNCLHVDQUF1QyxFQUFFLENBQUM7SUFDMUMsSUFBSSxDQUFDLG1DQUFtQyxFQUFFLEdBQUcsRUFBRTtRQUM5QyxNQUFNLGtCQUFrQixHQUFHLElBQUksa0JBQWtCLEVBQUUsQ0FBQztRQUNwRCxNQUFNLENBQUMsZUFBZSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ3BELGFBQWEsRUFBRSxFQUFFO1lBQ2pCLGlCQUFpQixFQUFFLElBQUk7WUFDdkIsb0JBQW9CLEVBQUUsSUFBSTtZQUMxQixvQkFBb0IsRUFBRSxJQUFJO1lBQzFCLGtCQUFrQixFQUFFLElBQUk7WUFDeEIsaUJBQWlCLEVBQUUsSUFBSTtZQUN2QixrQkFBa0IsRUFBRSxJQUFJO1lBQ3hCLFNBQVMsRUFBRSxDQUFDO1NBQ1osQ0FBQyxDQUFDO0lBQ0osQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLENBQUMsb0RBQW9ELEVBQUUsR0FBRyxFQUFFO1FBQy9ELE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxrQkFBa0IsQ0FBQyxFQUFF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