/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { localize } from '../../../../../nls.js';
import { mergeCurrentHeaderBackground, mergeIncomingHeaderBackground, registerColor, transparent } from '../../../../../platform/theme/common/colorRegistry.js';
export const diff = registerColor('mergeEditor.change.background', '#9bb95533', localize('mergeEditor.change.background', 'The background color for changes.'));
export const diffWord = registerColor('mergeEditor.change.word.background', { dark: '#9ccc2c33', light: '#9ccc2c66', hcDark: '#9ccc2c33', hcLight: '#9ccc2c66', }, localize('mergeEditor.change.word.background', 'The background color for word changes.'));
export const diffBase = registerColor('mergeEditor.changeBase.background', { dark: '#4B1818FF', light: '#FFCCCCFF', hcDark: '#4B1818FF', hcLight: '#FFCCCCFF', }, localize('mergeEditor.changeBase.background', 'The background color for changes in base.'));
export const diffWordBase = registerColor('mergeEditor.changeBase.word.background', { dark: '#6F1313FF', light: '#FFA3A3FF', hcDark: '#6F1313FF', hcLight: '#FFA3A3FF', }, localize('mergeEditor.changeBase.word.background', 'The background color for word changes in base.'));
export const conflictBorderUnhandledUnfocused = registerColor('mergeEditor.conflict.unhandledUnfocused.border', { dark: '#ffa6007a', light: '#ffa600FF', hcDark: '#ffa6007a', hcLight: '#ffa6007a', }, localize('mergeEditor.conflict.unhandledUnfocused.border', 'The border color of unhandled unfocused conflicts.'));
export const conflictBorderUnhandledFocused = registerColor('mergeEditor.conflict.unhandledFocused.border', '#ffa600', localize('mergeEditor.conflict.unhandledFocused.border', 'The border color of unhandled focused conflicts.'));
export const conflictBorderHandledUnfocused = registerColor('mergeEditor.conflict.handledUnfocused.border', '#86868649', localize('mergeEditor.conflict.handledUnfocused.border', 'The border color of handled unfocused conflicts.'));
export const conflictBorderHandledFocused = registerColor('mergeEditor.conflict.handledFocused.border', '#c1c1c1cc', localize('mergeEditor.conflict.handledFocused.border', 'The border color of handled focused conflicts.'));
export const handledConflictMinimapOverViewRulerColor = registerColor('mergeEditor.conflict.handled.minimapOverViewRuler', '#adaca8ee', localize('mergeEditor.conflict.handled.minimapOverViewRuler', 'The foreground color for changes in input 1.'));
export const unhandledConflictMinimapOverViewRulerColor = registerColor('mergeEditor.conflict.unhandled.minimapOverViewRuler', '#fcba03FF', localize('mergeEditor.conflict.unhandled.minimapOverViewRuler', 'The foreground color for changes in input 1.'));
export const conflictingLinesBackground = registerColor('mergeEditor.conflictingLines.background', '#ffea0047', localize('mergeEditor.conflictingLines.background', 'The background of the "Conflicting Lines" text.'));
const contentTransparency = 0.4;
export const conflictInput1Background = registerColor('mergeEditor.conflict.input1.background', transparent(mergeCurrentHeaderBackground, contentTransparency), localize('mergeEditor.conflict.input1.background', 'The background color of decorations in input 1.'));
export const conflictInput2Background = registerColor('mergeEditor.conflict.input2.background', transparent(mergeIncomingHeaderBackground, contentTransparency), localize('mergeEditor.conflict.input2.background', 'The background color of decorations in input 2.'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLmpzIiwic291cmNlUm9vdCI6ImZpbGU6Ly8vVXNlcnMvbWFobW9vZGFiZHVsbW9uaWVtL0Rlc2t0b3AvdmFsaW5vci1WL3ZzY29kZS9zcmMvIiwic291cmNlcyI6WyJ2cy93b3JrYmVuY2gvY29udHJpYi9tZXJnZUVkaXRvci9icm93c2VyL3ZpZXcvY29sb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBRWhHLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsNkJBQTZCLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBRWhLLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxhQUFhLENBQ2hDLCtCQUErQixFQUMvQixXQUFXLEVBQ1gsUUFBUSxDQUFDLCtCQUErQixFQUFFLG1DQUFtQyxDQUFDLENBQzlFLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsYUFBYSxDQUNwQyxvQ0FBb0MsRUFDcEMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsV0FBVyxHQUFHLEVBQ3JGLFFBQVEsQ0FBQyxvQ0FBb0MsRUFBRSx3Q0FBd0MsQ0FBQyxDQUN4RixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLGFBQWEsQ0FDcEMsbUNBQW1DLEVBQ25DLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLFdBQVcsR0FBRyxFQUNyRixRQUFRLENBQUMsbUNBQW1DLEVBQUUsMkNBQTJDLENBQUMsQ0FDMUYsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxhQUFhLENBQ3hDLHdDQUF3QyxFQUN4QyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxXQUFXLEdBQUcsRUFDckYsUUFBUSxDQUFDLHdDQUF3QyxFQUFFLGdEQUFnRCxDQUFDLENBQ3BHLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBRyxhQUFhLENBQzVELGdEQUFnRCxFQUNoRCxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxXQUFXLEdBQUcsRUFDckYsUUFBUSxDQUFDLGdEQUFnRCxFQUFFLG9EQUFvRCxDQUFDLENBQ2hILENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxhQUFhLENBQzFELDhDQUE4QyxFQUM5QyxTQUFTLEVBQ1QsUUFBUSxDQUFDLDhDQUE4QyxFQUFFLGtEQUFrRCxDQUFDLENBQzVHLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxhQUFhLENBQzFELDhDQUE4QyxFQUM5QyxXQUFXLEVBQ1gsUUFBUSxDQUFDLDhDQUE4QyxFQUFFLGtEQUFrRCxDQUFDLENBQzVHLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRyxhQUFhLENBQ3hELDRDQUE0QyxFQUM1QyxXQUFXLEVBQ1gsUUFBUSxDQUFDLDRDQUE0QyxFQUFFLGdEQUFnRCxDQUFDLENBQ3hHLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx3Q0FBd0MsR0FBRyxhQUFhLENBQ3BFLG1EQUFtRCxFQUNuRCxXQUFXLEVBQ1gsUUFBUSxDQUFDLG1EQUFtRCxFQUFFLDhDQUE4QyxDQUFDLENBQzdHLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwwQ0FBMEMsR0FBRyxhQUFhLENBQ3RFLHFEQUFxRCxFQUNyRCxXQUFXLEVBQ1gsUUFBUSxDQUFDLHFEQUFxRCxFQUFFLDhDQUE4QyxDQUFDLENBQy9HLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxhQUFhLENBQ3RELHlDQUF5QyxFQUN6QyxXQUFXLEVBQ1gsUUFBUSxDQUFDLHlDQUF5QyxFQUFFLGlEQUFpRCxDQUFDLENBQ3RHLENBQUM7QUFFRixNQUFNLG1CQUFtQixHQUFHLEdBQUcsQ0FBQztBQUNoQyxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxhQUFhLENBQ3BELHdDQUF3QyxFQUN4QyxXQUFXLENBQUMsNEJBQTRCLEVBQUUsbUJBQW1CLENBQUMsRUFDOUQsUUFBUSxDQUFDLHdDQUF3QyxFQUFFLGlEQUFpRCxDQUFDLENBQ3JHLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxhQUFhLENBQ3BELHdDQUF3QyxFQUN4QyxXQUFXLENBQUMsNkJBQTZCLEVBQUUsbUJBQW1CLENBQUMsRUFDL0QsUUFBUSxDQUFDLHdDQUF3QyxFQUFFLGlEQUFpRCxDQUFDLENBQ3JHLENBQUMifQ==